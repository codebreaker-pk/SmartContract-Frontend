{"ast":null,"code":"// src/App.js\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import { ethers } from 'ethers';\n// import SimpleContractABI from './contracts/SimpleContract.json';\n\n// const App = () => {\n//   const [contractValue, setContractValue] = useState('');\n//   const [newValue, setNewValue] = useState('');\n//   const provider = new ethers.providers.JsonRpcProvider('http://localhost:8545');\n//   const contractAddress = '0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9'; // Replace with the deployed contract address from deploy.js\n//   const contract = new ethers.Contract(contractAddress, SimpleContractABI.abi, provider.getSigner());\n\n//   const getContractValue = async () => {\n//     const value = await contract.getValue();\n//     setContractValue(value.toString());\n//   };\n\n//   useEffect(() => {\n//     getContractValue();\n//   }, []);\n\n//   const incrementValue = async () => {\n//     await contract.incrementValue();\n//     getContractValue();\n//   };\n\n//   const decrementValue = async () => {\n//     await contract.decrementValue();\n//     getContractValue();\n//   };\n\n//   const handleInputChange = (event) => {\n//     setNewValue(event.target.value);\n//   };\n\n//   const setValue = async () => {\n//     if (!newValue) return;\n//     await contract.setValue(newValue);\n//     getContractValue();\n//     setNewValue('');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>SimpleContract Frontend</h1>\n//       <p>Contract Value: {contractValue}</p>\n//       <button onClick={incrementValue}>Increment Value</button>\n//       <button onClick={decrementValue}>Decrement Value</button>\n//       <br />\n//       <input type=\"number\" value={newValue} onChange={handleInputChange} />\n//       <button onClick={setValue}>Set Value</button>\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/krpra/Desktop/Dapps/my-dapp/src/App.js"],"sourcesContent":["// src/App.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import './App.css';\r\n// import { ethers } from 'ethers';\r\n// import SimpleContractABI from './contracts/SimpleContract.json';\r\n\r\n// const App = () => {\r\n//   const [contractValue, setContractValue] = useState('');\r\n//   const [newValue, setNewValue] = useState('');\r\n//   const provider = new ethers.providers.JsonRpcProvider('http://localhost:8545');\r\n//   const contractAddress = '0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9'; // Replace with the deployed contract address from deploy.js\r\n//   const contract = new ethers.Contract(contractAddress, SimpleContractABI.abi, provider.getSigner());\r\n\r\n//   const getContractValue = async () => {\r\n//     const value = await contract.getValue();\r\n//     setContractValue(value.toString());\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getContractValue();\r\n//   }, []);\r\n\r\n//   const incrementValue = async () => {\r\n//     await contract.incrementValue();\r\n//     getContractValue();\r\n//   };\r\n\r\n//   const decrementValue = async () => {\r\n//     await contract.decrementValue();\r\n//     getContractValue();\r\n//   };\r\n\r\n//   const handleInputChange = (event) => {\r\n//     setNewValue(event.target.value);\r\n//   };\r\n\r\n//   const setValue = async () => {\r\n//     if (!newValue) return;\r\n//     await contract.setValue(newValue);\r\n//     getContractValue();\r\n//     setNewValue('');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1>SimpleContract Frontend</h1>\r\n//       <p>Contract Value: {contractValue}</p>\r\n//       <button onClick={incrementValue}>Increment Value</button>\r\n//       <button onClick={decrementValue}>Decrement Value</button>\r\n//       <br />\r\n//       <input type=\"number\" value={newValue} onChange={handleInputChange} />\r\n//       <button onClick={setValue}>Set Value</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}