{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krpra\\\\Desktop\\\\Dapps\\\\my-dapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport SimpleContractABI from './contracts/SimpleContract.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [contractValue, setContractValue] = useState('');\n  const [newValue, setNewValue] = useState('');\n  const provider = new ethers.providers.JsonRpcProvider('http://localhost:8545');\n  const contractAddress = '0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9'; // Replace with the deployed contract address from deploy.js\n  const contract = new ethers.Contract(contractAddress, SimpleContractABI.abi, provider.getSigner());\n  const getContractValue = async () => {\n    const value = await contract.getValue();\n    setContractValue(value.toString());\n  };\n  useEffect(() => {\n    getContractValue();\n  }, []);\n  const incrementValue = async () => {\n    await contract.incrementValue();\n    getContractValue();\n  };\n  const decrementValue = async () => {\n    await contract.decrementValue();\n    getContractValue();\n  };\n  const handleInputChange = event => {\n    setNewValue(event.target.value);\n  };\n  const setValue = async () => {\n    if (!newValue) return;\n    await contract.setValue(newValue);\n    getContractValue();\n    setNewValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SimpleContract Frontend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Contract Value: \", contractValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementValue,\n      children: \"Increment Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrementValue,\n      children: \"Decrement Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: newValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setValue,\n      children: \"Set Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"myeF3w1MbXcg/4ECLVUZTHeMzLw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","SimpleContractABI","jsxDEV","_jsxDEV","App","_s","contractValue","setContractValue","newValue","setNewValue","provider","providers","JsonRpcProvider","contractAddress","contract","Contract","abi","getSigner","getContractValue","value","getValue","toString","incrementValue","decrementValue","handleInputChange","event","target","setValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/krpra/Desktop/Dapps/my-dapp/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { ethers } from 'ethers';\r\nimport SimpleContractABI from './contracts/SimpleContract.json';\r\n\r\nconst App = () => {\r\n  const [contractValue, setContractValue] = useState('');\r\n  const [newValue, setNewValue] = useState('');\r\n  const provider = new ethers.providers.JsonRpcProvider('http://localhost:8545');\r\n  const contractAddress = '0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9'; // Replace with the deployed contract address from deploy.js\r\n  const contract = new ethers.Contract(contractAddress, SimpleContractABI.abi, provider.getSigner());\r\n\r\n  const getContractValue = async () => {\r\n    const value = await contract.getValue();\r\n    setContractValue(value.toString());\r\n  };\r\n\r\n  useEffect(() => {\r\n    getContractValue();\r\n  }, []);\r\n\r\n  const incrementValue = async () => {\r\n    await contract.incrementValue();\r\n    getContractValue();\r\n  };\r\n\r\n  const decrementValue = async () => {\r\n    await contract.decrementValue();\r\n    getContractValue();\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewValue(event.target.value);\r\n  };\r\n\r\n  const setValue = async () => {\r\n    if (!newValue) return;\r\n    await contract.setValue(newValue);\r\n    getContractValue();\r\n    setNewValue('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>SimpleContract Frontend</h1>\r\n      <p>Contract Value: {contractValue}</p>\r\n      <button onClick={incrementValue}>Increment Value</button>\r\n      <button onClick={decrementValue}>Decrement Value</button>\r\n      <br />\r\n      <input type=\"number\" value={newValue} onChange={handleInputChange} />\r\n      <button onClick={setValue}>Set Value</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}